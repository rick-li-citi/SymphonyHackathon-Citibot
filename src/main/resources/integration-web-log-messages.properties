integration.web.cannot.find.host=Cannot lookup hostname for IP address: {0}.
integration.web.cannot.find.host.solution=This may not be an actual problem.\n This Integration Bridge instance is \
  configured to allow webhook requests from specific hosts for this type of integration: {0}.\n This warning message \
  indicates that the Integration Bridge cannot convert the indicated IP address to its hostname in order to verify it \
  against the hosts whitelist.\n Check the indicated IP address and verify if it is associated to a hostname \
  indicated in the whitelist of originating hosts for the integration.\nIf that is the case, check the DNS services at \
  the Integration Bridge host machine and verify the reason why the given IP cannot be converted to the its hostname.\n
integration.web.request.blocked=Webhook request has been blocked because it is coming from an unauthorized host. \
  Originating host address info: {0}.
integration.web.request.blocked.solution=This Integration Bridge instance is configured to allow webhook requests \
  from specific hosts for this type of integration: {0}.\nCheck if the indicated IP's belong to authorized hosts and \
  if so, update the IP/host whitelist for the integration (check Integration Bridge deployment instructions for \
  information on how to do that).\nIf the indicated IP does not belong to an authorized host, this warning may \
  indicate that an external system is trying to post spoof messages through the Integration Bridge. If there is a high \
  number of warnings of this type, it is worth analysing the indicated IP's from an IT security standpoint.
integration.web.integration.bridge.unavailable=Integration Bridge temporarily unavailable due to connectivity issues.
integration.web.integration.bridge.unavailable.solution=Check Integration Bridge health via health check. This can be done \
  by sending a GET request to [Integration Bridge URL]/integration/health
integration.web.cannot.retrieve.whitelist=Cannot retrieve embedded {0} whitelist
integration.web.cannot.retrieve.whitelist.solution=Check if your integration type on your WebHook URL is valid. \
  by sending a GET request to [Integration Bridge URL]/integration/health
integration.web.payload.couldnt.parse.payload=Couldn't parse the incoming payload for the instance {0} and configuration {1}
integration.web.payload.couldnt.parse.payload.solution=Check if the integrity of the payload sent by your webhook and if it is \
  on a valid format
integration.web.webhook.configuration.unavailable=Configuration {0} unavailable!
integration.web.webhook.configuration.unavailable.solution=Check if the configuration id on your WebHook URL is valid.
integration.web.integration.unavailable=Integration {0} unavailable!
integration.web.integration.unavailable.solution=Verify the health-check and make sure the integration have already \
   been deployed
integration.web.integration.not.authorized=The informed integration (configuration id: {0}) does not support authorized API calls.
integration.web.integration.not.authorized.solution=Provide an integration that implements the interface AuthorizedIntegration.
integration.web.jwt.pod.url.unauthorized=The provided POD ID {0} is not the same used by the Integration Bridge. \
  Provide the correct one.
integration.web.jwt.pod.token.pair.invalid=The provided application token {0} and Symphony token {1} are invalid. \
  Restart the authentication process again by calling the service 'authenticate'.
integration.web.jwt.pod.token.jwt.invalid=The provided JWT token {0} is invalid and therefore unauthorized. More information: {1}.
integration.web.jwt.missing.parameter=Missing the required parameter {0} when calling {1}
integration.web.jwt.missing.parameter.solution=Please check if the required field {0} is not empty